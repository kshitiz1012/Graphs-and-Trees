const int N=1e5+3;
vector<ll> adj[N];
bool vis[N];
bool dfs(ll vertex,ll parent)
{
    vis[vertex]=true;
    bool found=false;
    for(auto &child:adj[vertex])
    {
        if(child==parent)
        continue;
        
        if(vis[child])
        return true;
        
        found|=dfs(child,vertex);
    }
    
    return found;
}
void solve()
{
    ll vertices,edges;
    cin>>vertices>>edges;
    
    for(int i=0;i<edges;i++)
    {
        ll first,second;
        cin>>first>>second;
        adj[first].push_back(second);
        adj[second].push_back(first);
    }
    
    bool found=false;
    for(int i=1;i<=vertices;i++)
    {
        if(vis[i]==false)
        {
            found|=dfs(i,0);
            if(found)
            break;
        }
    }
    
    if(found)
    yes;
    else
    no;
}
