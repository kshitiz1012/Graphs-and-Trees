const int N=1e5+3;
vector<ll> adj[N];
ll vis[N],level[N];
void bfs(ll rootnode)
{
     queue<ll> q;
     // push the root vertex first.
     q.push(rootnode);
     vis[rootnode]=1;
     while(q.size())
     {
         ll ele=q.front();
         q.pop();
         
         for(auto &child:adj[ele])
         {
             if(vis[child])
             continue;

             vis[child]=1;
             level[child]=level[ele]+1;
             q.push(child);
         }
     }
}
void solve()
{
    ll vertices,edges;
    cin>>vertices>>edges;
    
    for(int i=0;i<edges;i++)
    {
        ll first,second;
        cin>>first>>second;
        adj[first].push_back(second);
        adj[second].push_back(first);
    }
    
    // root node in this case.
    bfs(1);
}
