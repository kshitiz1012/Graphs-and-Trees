const int N=1e5+7;
vector<pair<ll,ll>> adj[N];
vector<ll> level(N,1e18);
void bfs(ll root)
{
    deque<ll> dq;
    dq.push_back(root);
    level[root]=0;
    
    while(dq.size())
    {
        ll node=dq.front();
        dq.pop_front();
        
        for(auto &child:adj[node])
        {
            ll wt=child.second;
            ll e=child.first;
            
            if(level[e]>level[node]+wt)
            {
                level[e]=level[node]+wt;
                if(wt==0)
                dq.push_front(e);
                else
                dq.push_back(e);
            }
        }
    }
}
void solve()
{
    ll vertices,edges;
    cin>>vertices>>edges;
    
    for(int i=0;i<edges;i++)
    {
        ll first,second,wt;
        cin>>first>>second>>wt;
        adj[first].push_back({second,wt});
        adj[second].push_back({first,wt});
    }
    
    bfs(1);
}
